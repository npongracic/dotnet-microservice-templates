// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using SC.API.CleanArchitecture.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace SC.API.CleanArchitecture.Infrastructure.Persistence.Configurations
{
    public class PartyRoleAssociationConfiguration : IEntityTypeConfiguration<PartyRoleAssociation>
    {
        public void Configure(EntityTypeBuilder<PartyRoleAssociation> entity)
        {
            entity.ToTable("PartyRoleAssociation");

            entity.HasIndex(e => e.PartyRoleInvolvedWithId);

            entity.HasIndex(e => e.PartyRoleInvolvesId);

            entity.HasIndex(e => new { e.PartyRoleInvolvedWithId, e.PartyRoleInvolvesId });

            entity.HasIndex(e => new { e.PartyRoleInvolvedWithId, e.PartyRoleInvolvesId, e.PartyRoleAssociationTypeId });

            entity.Property(e => e.Id).HasColumnName("ID");

            entity.Property(e => e.PartyRoleAssociationTypeId).HasColumnName("PartyRoleAssociationTypeID");

            entity.Property(e => e.PartyRoleInvolvedWithId).HasColumnName("PartyRoleInvolvedWithID");

            entity.Property(e => e.PartyRoleInvolvesId).HasColumnName("PartyRoleInvolvesID");

            entity.Property(e => e.Status).HasMaxLength(50);


            entity.HasOne(d => d.PartyRoleAssociationType)
                .WithMany(p => p.PartyRoleAssociations)
                .HasForeignKey(d => d.PartyRoleAssociationTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PartyRoleAssociation_PartyRoleAssociationType");

            entity.HasOne(d => d.PartyRoleInvolvedWith)
                .WithMany(p => p.PartyRoleAssociationPartyRoleInvolvedWiths)
                .HasForeignKey(d => d.PartyRoleInvolvedWithId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PartyRoleAssociation_PartyRole");

            entity.HasOne(d => d.PartyRoleInvolves)
                .WithMany(p => p.PartyRoleAssociationPartyRoleInvolves)
                .HasForeignKey(d => d.PartyRoleInvolvesId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PartyRoleAssociation_PartyRole1");
        }
    }
}
