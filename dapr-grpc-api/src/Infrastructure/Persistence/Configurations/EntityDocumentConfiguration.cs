// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using SC.API.CleanArchitecture.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace SC.API.CleanArchitecture.Infrastructure.Persistence.Configurations
{
    public class EntityDocumentConfiguration : IEntityTypeConfiguration<EntityDocument>
    {
        public void Configure(EntityTypeBuilder<EntityDocument> entity)
        {
            entity.HasKey(e => new { e.DocumentId, e.EntityId })
                .HasName("PK_dbo.EntityDocument");

            entity.ToTable("EntityDocument");

            entity.HasIndex(e => e.DocumentId);
            entity.HasIndex(e => e.EntityId);

            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");

            entity.Property(e => e.EntityId).HasColumnName("EntityID");

            entity.HasOne(d => d.Document)
                .WithMany(p => p.EntityDocuments)
                .HasForeignKey(d => d.DocumentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo.EntityDocument_dbo.Document_DocumentID");

            entity.HasOne(d => d.Entity)
                .WithMany(p => p.EntityDocuments)
                .HasForeignKey(d => d.EntityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo.EntityDocument_dbo.Entity_EntityID");
        }
    }
}
