// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using SC.API.CleanArchitecture.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace SC.API.CleanArchitecture.Infrastructure.Persistence.Configurations
{
    public class EntitySpecLifeCycleOperationConfiguration : IEntityTypeConfiguration<EntitySpecLifeCycleOperation>
    {
        public void Configure(EntityTypeBuilder<EntitySpecLifeCycleOperation> entity)
        {
            entity.HasKey(e => new { e.EntitySpecificationId, e.LifeCycleId, e.OperationId });

            entity.ToTable("EntitySpecLifeCycleOperation");

            entity.HasIndex(e => new { e.EntitySpecificationId, e.LifeCycleId, e.OperationId })
                .IsUnique();

            entity.Property(e => e.EntitySpecificationId).HasColumnName("EntitySpecificationID");

            entity.Property(e => e.LifeCycleId).HasColumnName("LifeCycleID");

            entity.Property(e => e.OperationId).HasColumnName("OperationID");

            entity.HasOne(d => d.EntitySpecification)
                .WithMany(p => p.EntitySpecLifeCycleOperations)
                .HasForeignKey(d => d.EntitySpecificationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EntitySpecLifeCycleOperation_EntitySpecification");

            entity.HasOne(d => d.LifeCycle)
                .WithMany(p => p.EntitySpecLifeCycleOperations)
                .HasForeignKey(d => d.LifeCycleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EntitySpecLifeCycleOperation_LifeCycle");

            entity.HasOne(d => d.Operation)
                .WithMany(p => p.EntitySpecLifeCycleOperations)
                .HasForeignKey(d => d.OperationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EntitySpecLifeCycleOperation_Operation");
        }
    }
}
