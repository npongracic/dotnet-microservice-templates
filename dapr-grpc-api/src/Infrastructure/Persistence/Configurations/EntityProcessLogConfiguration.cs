// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using SC.API.CleanArchitecture.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace SC.API.CleanArchitecture.Infrastructure.Persistence.Configurations
{
    public class EntityProcessLogConfiguration : IEntityTypeConfiguration<EntityProcessLog>
    {
        public void Configure(EntityTypeBuilder<EntityProcessLog> entity)
        {
            entity.ToTable("EntityProcessLog");

            entity.HasIndex(e => new { e.Id, e.Timestamp, e.ExecutorName, e.Note, e.EntityId });

            entity.Property(e => e.Id).HasColumnName("ID");

            entity.Property(e => e.ApplicationUserId)
                .HasColumnName("ApplicationUserId")
                .HasMaxLength(450);

            entity.Property(e => e.EntityId).HasColumnName("EntityID");

            entity.Property(e => e.ExecutorName).HasMaxLength(255);

            entity.Property(e => e.Note)
                .IsRequired().HasMaxLength(2000);

            entity.Property(e => e.OperationId).HasColumnName("OperationID");

            entity.Property(e => e.Timestamp)
                 .HasDefaultValueSql("CURRENT_TIMESTAMP");

            entity.HasOne(d => d.ApplicationUser)
                .WithMany(p => p.EntityProcessLogs)
                .HasForeignKey(d => d.ApplicationUserId)
                .HasConstraintName("FK_EntityProcessLog_AspNetUsers");

            entity.HasOne(d => d.Entity)
                .WithMany(p => p.EntityProcessLogs)
                .HasForeignKey(d => d.EntityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EntityProcessLog_Entity");

            entity.HasOne(d => d.Operation)
                .WithMany(p => p.EntityProcessLogs)
                .HasForeignKey(d => d.OperationId)
                .HasConstraintName("FK_EntityProcessLog_Operation");
        }
    }
}
