version: '3.4'

services:
  db:
    image: postgres
    hostname: db
    container_name: db
    volumes:
      - ./db/data:/var/lib/postgresql/data
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=SuperStrongP455word!

#  crdb:
#   image: cockroachdb/cockroach:v20.2.8
#   ports:
#     - "26257:26257"
#     - "8095:8080"
#   command: start-single-node --insecure
#   volumes:
#     - "${PWD}/cockroach-data/crdb:/cockroach/cockroach-data"

  dbadmin:
    image: dpage/pgadmin4
    hostname: dbadmin
    container_name: dbadmin
    depends_on:
      - db
    restart: always
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=SuperStrongP455word!

  web:
    image: ${DOCKER_REGISTRY-}sc.api.cleanarchitecture.web
    environment:
      - ASPNETCORE_URLS=http://+:5006
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=appdb;User Id=postgres;Password=SuperStrongP455word!
    expose:
      - 5006
      - 50001
      - 5070
    ports:
      - 5006:5006
      - 50001:50001
      - 5070:5070
    build:
      context: .
      dockerfile: src/SC.API.CleanArchitecture.Web/Dockerfile
    depends_on:
      - db

  web-dapr:
    image: "daprio/daprd:edge"
    restart: always
    command: [
      "./daprd",
     "-app-id", "SC.API.CleanArchitecture-web",
     "-app-protocol", "grpc",
     "-app-port", "5070",
     "-log-level", "debug",
     "-components-path", "/components",
     "-config", "/configuration/SC.API.CleanArchitecture-config.yaml",
     ]
    volumes:
      - "./dapr/components/:/components" # Mount our components folder for the runtime to use
      - "./dapr/configuration/:/configuration"
    depends_on:
      - web
      - broker
    network_mode: "service:web" # Attach the web-dapr service to the web network namespace


  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper
    container_name: zookeeper
    volumes:
      - ./kafka-storage/zookeeper/data:/var/lib/zookeeper/data
      - ./kafka-storage/zookeeper/log:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:5.5.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    volumes:
      - ./kafka-storage/kafka/data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.5.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  zipkin:
    image: openzipkin/zipkin-slim
    hostname: zipkin
    container_name: zipkin

  keycloak:  
    image: jboss/keycloak
    environment: 
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    volumes:
      - ./keycloak/realm-config:/opt/jboss/keycloak/realm-config
      - ./keycloak/keycloak-db:/opt/jboss/keycloak/standalone/data
      #- ./keycloak/certs/:/etc/x509/https   # map certificates to container
    ports:
      - 8023:8080
      - 8243:8443