// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using SC.API.CleanArchitecture.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using SC.API.CleanArchitecture.Application.Common;
using SC.API.CleanArchitecture.Application.Common.Enumerations;
using System.Linq;

namespace SC.API.CleanArchitecture.Infrastructure.Persistence.Configurations
{
    public class LifeCycleConfiguration : IEntityTypeConfiguration<LifeCycle>
    {
        public void Configure(EntityTypeBuilder<LifeCycle> entity)
        {
            entity.ToTable("LifeCycle");

            entity.Property(e => e.Id)
                .HasColumnName("ID")
                .ValueGeneratedNever();

            entity.Property(e => e.LifeCycleClassDefinitionId).HasColumnName("LifeCycleClassDefinitionID");

            entity.Property(e => e.LifeCycleStateTypeId).HasColumnName("LifeCycleStateTypeID");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.LifeCycleClassDefinition)
                .WithMany(p => p.LifeCycles)
                .HasForeignKey(d => d.LifeCycleClassDefinitionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LifeCycle_LifeCycleClassDefinition");

            entity.HasOne(d => d.LifeCycleStateType)
                .WithMany(p => p.LifeCycles)
                .HasForeignKey(d => d.LifeCycleStateTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LifeCycle_LifeCycleStateType");

            entity.HasData(Enumeration.GetAll<TicketLifeCycle>().Select(t => new LifeCycle
            {
                Id = t.Id,
                Name = t.Name,
                LifeCycleClassDefinitionId = (int)t.LifeCycleClassDefinition,
                LifeCycleStateTypeId = (int)t.LifeCycleStateType
            }));
        }
    }
}
