// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using SC.API.CleanArchitecture.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace SC.API.CleanArchitecture.Infrastructure.Persistence.Configurations
{
    public class PermissionConfiguration : IEntityTypeConfiguration<Permission>
    {
        public void Configure(EntityTypeBuilder<Permission> entity)
        {
            entity.ToTable("Permission");

            entity.HasIndex(e => e.Name)
                .IsUnique();

            entity.Property(e => e.Id)
                .HasColumnName("ID")
                .ValueGeneratedNever();

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);

            entity.Property(e => e.PermissionGroupId).HasColumnName("PermissionGroupID");

            entity.Property(e => e.PermissionLevelId).HasColumnName("PermissionLevelID");

            entity.Property(e => e.PermissionTypeId).HasColumnName("PermissionTypeID");

            entity.HasOne(d => d.PermissionGroup)
                .WithMany(p => p.Permissions)
                .HasForeignKey(d => d.PermissionGroupId)
                .HasConstraintName("FK_Permission_PermissionGroup");

            entity.HasOne(d => d.PermissionLevel)
                .WithMany(p => p.Permissions)
                .HasForeignKey(d => d.PermissionLevelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Permission_PermissionLevel");

            entity.HasOne(d => d.PermissionType)
                .WithMany(p => p.Permissions)
                .HasForeignKey(d => d.PermissionTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Permission_PermissionType");
        }
    }
}
